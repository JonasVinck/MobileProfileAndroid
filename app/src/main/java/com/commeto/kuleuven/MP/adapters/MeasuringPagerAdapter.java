package com.commeto.kuleuven.MP.adapters;

import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;

import com.commeto.kuleuven.MP.fragments.MeasuringGraphFragment;
import com.commeto.kuleuven.MP.fragments.MeasuringMapFragment;

import java.util.HashMap;

import static com.commeto.kuleuven.MP.support.Static.makeToastShort;

/**
 * <pre>
 * Created by Jonas on 10/04/2018.
 *
 * Adapter used to fill in part of the MeasuringActivity.
 *
 * Fragments:
 *  - MeasuringMapFragment
 *  - MeasuringGraphFragment
 *
 * 3 different MeasuringGraphFragments used:
 *  - for light sensor data
 *  - for acceleration sensor data
 *  - for height difference
 *
 * Fragments are kept in HashMap and titles in String array to make Pager more dynamic.
 * </pre>
 */

public class MeasuringPagerAdapter extends FragmentPagerAdapter {

    private final int PAGE_COUNT;

    private HashMap<String, Fragment> fragments;
    private String[] titles;
    /**
     * The String array wil be used to determine the order in which the Fragments will be displayed.
     *
     * @param fragmentManager The FragmentManager generated by the calling Activity.
     * @param fragments       A HashMap of all the Fragments that have to be displayed.
     * @param titles          An array of Strings containing the titles of the Fragments.
     */
    public MeasuringPagerAdapter(FragmentManager fragmentManager, HashMap<String, Fragment> fragments, String[] titles) {
        super(fragmentManager);

        PAGE_COUNT = fragments.size();
        this.fragments = fragments;
        this.titles = titles;
    }

    @Override
    public int getCount() {
        return PAGE_COUNT;
    }

    @Override
    public Fragment getItem(int position) {
        return fragments.get(titles[position]);
    }

    @Override
    public CharSequence getPageTitle(int position) {

        return titles[position];
    }

    /**
     * Method used by MeasuringActivity to push the data to the different Fragments to be displayed.
     *
     * @param lat        The measured latitude.
     * @param lon        The measured longitude.
     * @param altitude   The measured altitude.
     * @param vibration  The measured vibration.
     * @param lightLevel The measured light level.
     */
    public void append(double lat, double lon, double altitude, double vibration, double lightLevel){

        if(fragments.containsKey("Trilling")) ((MeasuringGraphFragment) fragments.get("Trilling")).append(vibration);
        ((MeasuringGraphFragment) fragments.get("Verlichting")).append(lightLevel);
        ((MeasuringGraphFragment) fragments.get("Hoogteverschil")).append(altitude);
        ((MeasuringMapFragment) fragments.get("Kaart")).append(lat, lon);
    }
}
